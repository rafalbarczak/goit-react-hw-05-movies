{"version":3,"file":"static/js/653.7e58fbbf.chunk.js","mappings":"qPACA,EAAwB,sB,SCuDxB,EApDe,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAaL,GAFpC,OAEUM,EAFV,OAGIH,EAAUG,EAAKC,SAHnB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACV,IAYJ,OACE,iCACE,kBAAMW,SARW,SAAAC,GACnBA,EAAEC,iBACFZ,EAAkBH,GAClBC,EAAS,GACV,EAIG,WACE,kBACEe,UAAWC,EACXC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,iBACZC,MAAOtB,EACPuB,SApBa,SAAAT,GACnBb,EAASa,EAAEU,OAAOF,MACnB,KAoBK,mBAAQJ,KAAK,SAAb,wBAEF,wBACGd,EAAOqB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADA,QAQxB,C,sLCtDKE,EAAU,mCAEVC,EAAY,mCAAG,WAAOC,GAAP,4FAAiBC,EAAjB,+BAA0B,CAAC,EAA3B,kBAEMC,MAAM,+BAAD,OACKF,EADL,oBACyBF,EADzB,YACoC,IAAIK,gBAChEF,KAJa,WAEXG,EAFW,QAOHC,GAPG,sBAQT,IAAIC,MAAMF,EAASG,QARV,uBAUJH,EAASI,OAVL,gFAYX,IAAIF,MAAJ,qCAZW,0DAAH,sDAgBLG,EAAiB,mCAAG,uGACxBV,EAAa,wBADW,2CAAH,qDAIjBxB,EAAY,mCAAG,WAAMP,GAAN,0FACnB+B,EAAa,gBAAiB,CAAE/B,MAAAA,KADb,2CAAH,sDAIZ0C,EAAe,mCAAG,WAAMC,GAAN,0FACtBZ,EAAa,UAAD,OAAWY,KADD,2CAAH,sDAIfC,EAAY,mCAAG,WAAMD,GAAN,0FACnBZ,EAAa,UAAD,OAAWY,EAAX,cADO,2CAAH,sDAIZE,EAAe,mCAAG,WAAMF,GAAN,0FACtBZ,EAAa,UAAD,OAAWY,EAAX,cADU,2CAAH,qD,sBClC5B,SAASG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB/B,EAAQgC,EAAKhC,KAInB,CAHE,MAAOiC,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQ1B,GAERmC,QAAQT,QAAQ1B,GAAOoC,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAM5B,GACbwB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ7B,EAClE,CAEA,SAAS6B,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx","components/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Movies_input__OE3ef\"};","import { searchMovies } from 'components/api';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport css from './Movies.module.css';\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchedPhrase, setSearchedPhrase] = useState('');\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchSearchedMovies() {\n      try {\n        const data = await searchMovies(searchedPhrase);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchSearchedMovies();\n  }, [searchedPhrase]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchedPhrase(query);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search a movie\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","const API_KEY = '5577624f107f96fb286666953fd25f4f';\n\nconst fetchFromAPI = async (endpoint, params = {}) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}&${new URLSearchParams(\n        params\n      )}`\n    );\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error(`API request failed: ${error}`);\n  }\n};\n\nexport const getTrendingMovies = async () => {\n  return fetchFromAPI('/trending/movie/day');\n};\n\nexport const searchMovies = async query => {\n  return fetchFromAPI('/search/movie', { query });\n};\n\nexport const getMovieDetails = async movieId => {\n  return fetchFromAPI(`/movie/${movieId}`);\n};\n\nexport const getMovieCast = async movieId => {\n  return fetchFromAPI(`/movie/${movieId}/credits`);\n};\n\nexport const getMovieReviews = async movieId => {\n  return fetchFromAPI(`/movie/${movieId}/reviews`);\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","query","setQuery","searchedPhrase","setSearchedPhrase","movies","setMovies","useEffect","searchMovies","data","results","console","log","fetchSearchedMovies","onSubmit","e","preventDefault","className","css","type","autoComplete","autoFocus","placeholder","value","onChange","target","map","movie","to","id","title","API_KEY","fetchFromAPI","endpoint","params","fetch","URLSearchParams","response","ok","Error","status","json","getTrendingMovies","getMovieDetails","movieId","getMovieCast","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}