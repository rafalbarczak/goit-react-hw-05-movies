{"version":3,"file":"static/js/186.15add471.chunk.js","mappings":"yNAwCA,UApCgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAgBH,GAFvC,OAEUI,EAFV,OAGIL,EAAgBK,EAAKC,SACrBC,QAAQC,IAAIH,EAAKC,SAJrB,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACR,KAGF,8BACGF,EAAaW,OAAS,GACrB,wBACGX,EAAaY,KAAI,SAAAC,GAAM,OACtB,2BACE,uCAAeA,EAAOC,WACtB,uBAAID,EAAOE,YAFJF,EAAOG,GADM,MAQ1B,4CAIP,C,sLCtCKC,EAAU,mCAEVC,EAAY,mCAAG,WAAOC,GAAP,4FAAiBC,EAAjB,+BAA0B,CAAC,EAA3B,kBAEMC,MAAM,+BAAD,OACKF,EADL,oBACyBF,EADzB,YACoC,IAAIK,gBAChEF,KAJa,WAEXG,EAFW,QAOHC,GAPG,sBAQT,IAAIC,MAAMF,EAASG,QARV,uBAUJH,EAASI,OAVL,gFAYX,IAAIF,MAAJ,qCAZW,0DAAH,sDAgBLG,EAAiB,mCAAG,uGACxBV,EAAa,wBADW,2CAAH,qDAIjBW,EAAY,mCAAG,WAAMC,GAAN,0FACnBZ,EAAa,gBAAiB,CAAEY,MAAAA,KADb,2CAAH,sDAIZC,EAAe,mCAAG,WAAM7B,GAAN,0FACtBgB,EAAa,UAAD,OAAWhB,KADD,2CAAH,sDAIf8B,EAAY,mCAAG,WAAM9B,GAAN,0FACnBgB,EAAa,UAAD,OAAWhB,EAAX,cADO,2CAAH,sDAIZG,EAAe,mCAAG,WAAMH,GAAN,0FACtBgB,EAAa,UAAD,OAAWhB,EAAX,cADU,2CAAH,qD,sBClC5B,SAAS+B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.jsx","components/api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'components/api';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      try {\n        const data = await getMovieReviews(movieId);\n        setMovieReviews(data.results);\n        console.log(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews.length > 0 ? (\n        <ul>\n          {movieReviews.map(review => (\n            <li key={review.id}>\n              <span>Author: {review.author}</span>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        \"We don't have any reviews for this movie\"\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","const API_KEY = '5577624f107f96fb286666953fd25f4f';\n\nconst fetchFromAPI = async (endpoint, params = {}) => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}&${new URLSearchParams(\n        params\n      )}`\n    );\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return await response.json();\n  } catch (error) {\n    throw new Error(`API request failed: ${error}`);\n  }\n};\n\nexport const getTrendingMovies = async () => {\n  return fetchFromAPI('/trending/movie/day');\n};\n\nexport const searchMovies = async query => {\n  return fetchFromAPI('/search/movie', { query });\n};\n\nexport const getMovieDetails = async movieId => {\n  return fetchFromAPI(`/movie/${movieId}`);\n};\n\nexport const getMovieCast = async movieId => {\n  return fetchFromAPI(`/movie/${movieId}/credits`);\n};\n\nexport const getMovieReviews = async movieId => {\n  return fetchFromAPI(`/movie/${movieId}/reviews`);\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","getMovieReviews","data","results","console","log","fetchMovieReviews","length","map","review","author","content","id","API_KEY","fetchFromAPI","endpoint","params","fetch","URLSearchParams","response","ok","Error","status","json","getTrendingMovies","searchMovies","query","getMovieDetails","getMovieCast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}